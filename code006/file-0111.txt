<?php

declare(strict_types=1);

namespace App\Base;

use Illuminate\Contracts\Cache\Lock;
use Illuminate\Foundation\Auth\Access\AuthorizesRequests;
use Illuminate\Foundation\Bus\DispatchesJobs;
use Illuminate\Foundation\Validation\ValidatesRequests;
use Illuminate\Routing\Controller;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Facades\Log;

abstract class AbstractController extends Controller
{
    use AuthorizesRequests, DispatchesJobs, ValidatesRequests;

    protected bool $AutoReleaseLock = true;

    protected ?Lock $Lock = null;

    protected int $SecondsForBlocking = 2;

    protected int $SecondsForLocking = 5;

    public function __construct()
    {
        Log::info(static::class);
    }

    public function acquireLock(int|string $UserId): ?Lock
    {
        $this->Lock = $this->makeLock($UserId);
        $this->Lock->block($this->SecondsForBlocking);

        return $this->Lock;
    }

    public function makeLock(int|string $UserId): Lock
    {
        return Cache::lock($this->makeLockKey($UserId), $this->SecondsForLocking);
    }

    public function makeLockKey(int|string $UserId): string
    {
        return static::class.":$UserId";
    }

    public function releaseLock(): void
    {
        if ($this->Lock) {
            if (App::runningUnitTests() || $this->AutoReleaseLock) {
                $this->Lock->release();
            }
        }
    }
}
