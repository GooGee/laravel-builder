<?php

// CreateOneItem

declare(strict_types=1);

namespace {{ tree.getFullNameSpaceOfFile(file, entity, action) }};

use App\Exceptions\DuplicatedException;
{% for dependency in dependencyzz %}
use {{ dependency }};{% endfor %}
use Illuminate\Support\Facades\Log;

class {{ helper.getClassName(file, entity, action) }}
{
    static function run(int $UserId, {{ helper.getClassName(helper.findFile('Model'), entity, action) }} $Item, bool $ThrowIfExist): {{ helper.getClassName(helper.findFile('Model'), entity, action) }}
    {
        Log::info(self::class, ['UserId' => $UserId, 'Item' => $Item]);

        if ($ThrowIfExist) {
            $exist = {{ helper.getClassName(helper.findFile('Model'), entity, action) }}::query()
                ->where('UserId', $Item->UserId)
                ->exists();
            if ($exist) {
                throw new DuplicatedException({{ helper.getClassName(helper.findFile('Model'), entity, action) }}::getShortName());
            }
        }

        $Item->save();
        $Item->refresh();

        return $Item;
    }

}
