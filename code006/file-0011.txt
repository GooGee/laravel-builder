<?php

// ModelBase

declare(strict_types=1);

namespace {{ tree.getFullNameSpaceOfFile(file, entity, action) }};

{% for dependency in dependencyzz %}
use {{ dependency }};{% endfor %}
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\Relations\HasOne;

/**
 * this file is generated by Laravel-Builder,
 * should not be modified manually.
 * please make modifications in child class.
 *
 *{% for column in columnzz %}
 * @property {{ helper.makeColumnType(column) }} ${{column.name}}{% endfor %}
 *{% for property in przz %}
 * @property {{ property }}{% endfor %}
 */
class {{ helper.getClassName(file, entity, action) }} extends AbstractModel
{

{% for relation in relationzz %}
    const Relation_{{ relation.name1 }} = "{{ relation.name1 }}";{% endfor %}

    /**
     * The table associated with the model.
     *
     * @var string
     */
    protected $table = '{{ entity.table if entity.table else entity.name }}';

    /**
     * The attributes that should be cast.
     *
     * @var array<string, string>
     */
    protected $casts = [
{% for nc in castzz %}
        '{{ nc[0] }}' => {{ nc[1] }},{% endfor %}
    ];

    /**
     * The attributes that should be hidden for serialization.
     *
     * @var array<int, string>
     */
    protected $hidden = [
{% for column in columnzz | selectattr('hidden') %}
        '{{ column.name }}',{% endfor %}
    ];

    /**
     * @return string[]
     */
    public static function getKeyzz(): array
    {
        return [
{% for key in columnzz | rejectattr('hidden') | rejectattr('wo') %}
            '{{ key.name }}',{% endfor %}
        ];
    }

    public function setAll(
{% for column in setableColumnzz | selectattr('fillable') %}
        {{ helper.makeColumnType(column) }} ${{column.name}},{% endfor %}
    ): void
    {
{% for column in setableColumnzz %}
        $this->{{ column.name }} = ${{ column.name }};{% endfor %}
    }

{% for text in textzz %}
{{ text }}{% endfor %}

}
