<?php

// CloneOneItemController

declare(strict_types=1);

namespace {{ tree.getFullNameSpaceOfFile(file, entity, action) }};

use App\Base\AbstractController;
use App\Base\AbstractResponse;
use App\Models\User;
{% for dependency in dependencyzz %}
use {{ dependency }};{% endfor %}
use Illuminate\Http\JsonResponse;
use Illuminate\Support\Facades\DB;
use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;

class {{ helper.getClassName(file, entity, action) }} extends AbstractController
{
    public function __invoke(int $Id): JsonResponse
    {
        /** @var User $User */
        $User = auth()->user();

        $this->acquireLock($User->Id);

        try {

            DB::beginTransaction();

            $source = {{ helper.getClassName(helper.findFile('Model'), entity, action) }}::findOrFail($Id);

            $Item = $source->replicate();
            {{ helper.getClassName(helper.findFile('CreateOne'), entity, 'CreateOne') }}::run($User->Id, $Item, false);

            DB::commit();

            return AbstractResponse::sendModelItem($Item);

        } catch (\Throwable $Throwable) {

            DB::rollBack();

            throw $Throwable;

        } finally {
            $this->releaseLock();
        }

    }
}
