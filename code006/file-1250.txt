<?php

// UploadOneTest

declare(strict_types=1);

namespace {{ tree.getFullNameSpaceOfFile(file, entity, action) }};

use Illuminate\Http\UploadedFile;

class {{ helper.getClassName(file, entity, action) }} extends {{ helper.getClassName(helper.findFile('AbstractItemTestBase'), entity, action) }}
{
    protected static function getPath(): string
    {
        return "{{ entity.name }}-{{ action }}";
    }

    public function test{{ action + entity.name }}(): void
    {
        $User = $this->createUser();
        $data = [
            'FilePhoto' => UploadedFile::fake()->image('photo.webp', 640, 360),
        ];
        $response = $this->postJson($this->makeUri(0), $data)
            ->assertStatus(401);

        $this->actingAs($User);

        $response = $this->postJson($this->makeUri(0), [])
            ->assertStatus(422);
        $response->assertJsonValidationErrorFor('File', self::ErrorFieldName);

        $response = $this->postJson($this->makeUri(0), $data)
            ->assertStatus(200);
        $this->seeItem($response);
        $response->assertJsonPath('Item.Width', 640);
        $response->assertJsonPath('Item.Height', 360);

        $response = $this->postJson($this->makeUri(0), $data)
            ->assertStatus(400);
    }
}
