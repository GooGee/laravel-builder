<?php

declare(strict_types=1);

namespace {{ tree.getFullNameSpaceOfFile(file, entity, action) }};

use App\Base\AbstractReadPage;
{% for dependency in dependencyzz %}
use {{ dependency }};{% endfor %}
use Illuminate\Pagination\LengthAwarePaginator;

class {{ helper.getClassName(file, entity, action) }} extends AbstractReadPage
{
    /**
     * @param array<string, mixed> $Data
     * @return LengthAwarePaginator<{{ helper.getClassName(helper.findFile('Model'), entity, action) }}>
     */
    function run(array $Data): LengthAwarePaginator
    {
        $Qb = {{ helper.getClassName(helper.findFile('Model'), entity, action) }}::query();

        $builder = self::makeReadPageQueryBuilder($Qb, $Data);

        $builder->addFilterzz([
{% for column in columnzz %}
            '{{ column.name }}',{% endfor %}
        ]);

        $builder->addSort();

        /* @phpstan-ignore-next-line */
        return $Qb->paginate();
    }

}
