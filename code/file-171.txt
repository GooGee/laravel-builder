<?php

declare(strict_types=1);

namespace {{ tree.getFullNameSpaceOfFile(file, entity, action) }};

use App\Base\AbstractController;
use App\Base\AbstractResponse;
{% for dependency in dependencyzz %}
use {{ dependency }};{% endfor %}
use Illuminate\Http\JsonResponse;
use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;

class {{ helper.getClassName(file, entity, action) }} extends AbstractController
{
    public function __invoke(int $Id, {{ action + entity.name }}Request $Request, {{ action + entity.name }} $UpdateOne): JsonResponse
    {
        /** @var \App\Models\Admin $User */
        $User = auth()->guard('admin')->user();

        if ($User->cannot('{{ action + entity.name }}')) {
            throw new AccessDeniedHttpException('Permission {{ action + entity.name }} required');
        }

        $Item = {{ helper.getClassName(helper.findFile('Model'), entity, action) }}::findOrFail($Id);

        $Item = $UpdateOne->run($User,
            $Item,
{% for column in columnzz %}
            $Request->validated('{{ column.name }}'),{% endfor %}
        );

        return AbstractResponse::sendModel($Item);
    }
}
