<?php

declare(strict_types=1);

namespace App\Base;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;

class ReadPageQueryBuilder
{
    /**
     * @param  Builder<Model>  $qb
     * @param  array<string, mixed>  $data
     */
    public function __construct(public Builder $qb, private array $data)
    {
    }

    public function addFilter(string $key): self
    {
        $this->qb->where($key, $this->getFilterValue($key));

        return $this;
    }

    /**
     * @param  string[]  $keyzz
     * @return $this
     */
    public function addFilterzz(array $keyzz): self
    {
        foreach ($keyzz as $key) {
            $this->addFilter($key);
        }

        return $this;
    }

    public function addFilterSearch(string $key): self
    {
        $this->qb->where($key, 'LIKE', "%{$this->getFilterValue($key)}%");

        return $this;
    }

    public function addSort(): self
    {
        $sortField = $this->data['sortField'] ?? null;
        $sortOrder = $this->data['sortOrder'] ?? 'asc';

        if (is_null($sortField)) {
            return $this;
        }

        $this->qb->orderBy($sortField, $sortOrder);

        return $this;
    }

    public function getFilterValue(string $key): int|string|null
    {
        return $this->data['filter'][$key] ?? null;
    }
}
