<?php

declare(strict_types=1);

namespace App\Base;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;

class ReadPageQueryBuilder
{
    /**
     * @param Builder<Model> $Qb
     * @param array<string, mixed> $Data
     */
    public function __construct(public Builder $Qb, private array $Data)
    {
    }

    public function addFilter(string $Key): self
    {
        $value = $this->getFilterValue($Key);
        if (isset($value)) {
            $this->Qb->where($Key, $value);
        }

        return $this;
    }

    /**
     * @param string[] $Keyzz
     * @return $this
     */
    public function addFilterzz(array $Keyzz): self
    {
        foreach ($Keyzz as $Key) {
            $this->addFilter($Key);
        }

        return $this;
    }

    public function addFilterSearch(string $Key): self
    {
        $value = $this->getFilterValue($Key);
        if (isset($value)) {
            $this->Qb->where($Key, 'LIKE', "%{$value}%");
        }

        return $this;
    }

    public function addSort(): self
    {
        $sortField = $this->Data['SortField'] ?? null;
        $sortOrder = $this->Data['SortOrder'] ?? 'asc';

        if (is_null($sortField)) {
            return $this;
        }

        $this->Qb->orderBy($sortField, $sortOrder);

        return $this;
    }

    public function getFilterValue(string $Key): int|string|null
    {
        return $this->Data['Filter'][$Key] ?? null;
    }
}
