<?php

declare(strict_types=1);

namespace {{ tree.getFullNameSpaceOfFile(file, entity, action) }};

use App\Base\AbstractReadPage;
{% for dependency in dependencyzz %}
use {{ dependency }};{% endfor %}
use Illuminate\Database\Eloquent\Model;
use Illuminate\Pagination\Paginator;

class {{ helper.getClassName(file, entity, action) }} extends AbstractReadPage
{
    /**
     * @param array<string, mixed> $Data
     * @return Paginator<Model>
     */
    public function run(int $UserId, array $Data): Paginator
    {
        $Qb = {{ helper.getClassName(helper.findFile('Model'), entity, action) }}::query();

        $Qb->where('UserId', $UserId);

        $builder = self::makeReadPageQueryBuilder($Qb, $Data);

        $builder->addFilterzz([
{% for column in columnzz %}
            '{{ column.name }}',{% endfor %}
        ]);

        $builder->addSort();

        /* @phpstan-ignore-next-line */
        return $Qb->simplePaginate();
    }

}
