<?php

declare(strict_types=1);

namespace {{ tree.getFullNameSpaceOfFile(file, entity, action) }};

use App\Models\User;
{% for dependency in dependencyzz %}
use {{ dependency }};{% endfor %}
use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;

class {{ helper.getClassName(file, entity, action) }}
{
    function run(User $user, {{ helper.getClassName(helper.findFile('Model'), entity, action) }} $item,
{% for column in columnzz %}
                      {{ helper.makeColumnType(column) }} ${{ column.name }},{% endfor %}): {{ helper.getClassName(helper.findFile('Model'), entity, action) }}
    {
        if ($user->id !== $item->userId) {
            throw new AccessDeniedHttpException();
        }

{% for column in columnzz %}
        $item->{{ column.name }} = ${{ column.name }};{% endfor %}

        $item->save();

        event(new {{ action + entity.name }}Event($user, $item));

        return $item;
    }

}
