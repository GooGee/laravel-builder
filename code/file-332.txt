<?php

declare(strict_types=1);

namespace {{ tree.getFullNameSpaceOfFile(file, schema, action) }};

{% for dependency in dependencyzz %}
use {{ dependency }};{% endfor %}

class {{ tree.getClassName(file, schema, action) }}
{
    public function __construct(private {{ tree.getClassName(helper.findFile('Repository'), schema, action) }} $repository)
    {
    }

    /**
     * @param int $end
     * @return \Illuminate\Database\Eloquent\Collection<{{ tree.getClassName(helper.findFile('Model'), schema, action) }}>
     */
    function __invoke(int $end, {% for column in columnzz %}
                      {{ makeColumnType(column) }} ${{ column.name }},{% endfor %}
    )
    {
        return $this->repository->query()
            ->where('id', '<', $end)
            ->orderByDesc('id')
            ->limit({{ tree.getClassName(helper.findFile('Repository'), schema, action) }}::PageSize)
            ->get();
    }

}
