<?php

declare(strict_types=1);

namespace {{ tree.getFullNameSpaceOfFile(file, entity, action) }};

class {{ helper.getClassName(file, entity, action) }} extends {{ helper.getClassName(helper.findFile('AdminAbstractItemTest'), entity, action) }}
{
    protected function getPath(): string
    {
        return "{{ entity.name }}/{{ action }}";
    }

    public function test{{ action + entity.name }}()
    {
        $Permission = $this->createPermission('{{ action + entity.name }}');
        $admin = $this->createAdmin();
        $Item = $this->makeItem($admin);
        $Item->save();

        $User = $this->createUser();
        $this->actingAs($User);

        $Idzz = [$Item->Id];
        $Response = $this->deleteJson($this->makeURI(), compact('Idzz'))
            ->assertStatus(401);

        $this->actingAs($admin, 'admin');

        $Response = $this->deleteJson($this->makeURI(), [])
            ->assertStatus(422);
        $Response->assertJsonValidationErrorFor('Idzz');

        $Idzz = [$Item->Id];
        $Response = $this->deleteJson($this->makeURI(), compact('Idzz'))
            ->assertStatus(403);
        $Response->assertSeeText($Permission->name);

        $admin->givePermissionTo($Permission);
        $Idzz = [$Item->Id];
        $Response = $this->deleteJson($this->makeURI(), compact('Idzz'))
            ->assertStatus(200);
        $Response->assertJsonCount(1, 'Data');

    }
}
