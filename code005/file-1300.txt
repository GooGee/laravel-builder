<?php

// DeleteManyTest

declare(strict_types=1);

namespace {{ tree.getFullNameSpaceOfFile(file, entity, action) }};

class {{ helper.getClassName(file, entity, action) }} extends {{ helper.getClassName(helper.findFile('AbstractItemTestBase'), entity, action) }}
{
    protected static function getPath(): string
    {
        return "{{ entity.name }}-{{ action }}";
    }

    public function test{{ action + entity.name }}()
    {
        $User = $this->createUser();
        $item = $this->makeItem($User);
        $item->save();

        $Idzz = [$item->Id];
        $response = $this->deleteJson($this->makeUri(), compact('Idzz'))
            ->assertStatus(401);

        $this->actingAs($User);

        $response = $this->deleteJson($this->makeUri(), [])
            ->assertStatus(422);
        $response->assertJsonValidationErrorFor('Idzz', self::ErrorFieldName);

        $response = $this->deleteJson($this->makeUri(), compact('Idzz'))
            ->assertStatus(200);
        $response->assertJsonCount(1, 'Data');
        self::assertNull($item->DeletedAt);
    }
}
