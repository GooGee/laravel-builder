<?php

declare(strict_types=1);

namespace App\Base;

use Illuminate\Validation\Rule;

/**
 * @property int $Page
 * @property int $PerPage
 * @property string $SortField
 * @property string $SortOrder
 * @property array<string, mixed> $Filter
 * @property array<string, mixed> $WhereIn
 * @property array<string, mixed> $WhereNot
 * @property array<string, mixed> $WhereNotIn
 */
class ReadPageRequest extends AbstractRequest
{
    /**
     * Get the validation rules that apply to the request.
     */
    public function rules(): array
    {
        return static::makeRuleMapForPage();
    }

    /**
     * @return array<string, mixed[]>
     */
    public static function makeRuleMapForPage(): array
    {
        $RuleMap = [
            'Page' => ['integer', 'min:1', 'max:1000'],
            'PerPage' => ['integer', 'min:5', 'max:100'],
            'SortField' => ['string'],
            'SortOrder' => ['string', Rule::in([PageParameter::SortAsc, PageParameter::SortDesc])],
        ];
        foreach (static::makeRuleMap() as $Key => $Item) {
            $RuleMap['Filter.'.$Key] = $Item;
        }
        foreach (static::makeWhereInRuleMap() as $Key => $Item) {
            $RuleMap['WhereIn.'.$Key] = $Item;
        }
        foreach (static::makeWhereNotRuleMap() as $Key => $Item) {
            $RuleMap['WhereNot.'.$Key] = $Item;
        }
        foreach (static::makeWhereNotInRuleMap() as $Key => $Item) {
            $RuleMap['WhereNotIn.'.$Key] = $Item;
        }

        return $RuleMap;
    }

    /**
     * @return array<string, string[]>
     */
    public static function makeRuleMap(): array
    {
        return [];
    }

    /**
     * @return array<string, string[]>
     */
    public static function makeWhereInRuleMap(): array
    {
        return [];
    }

    /**
     * @return array<string, string[]>
     */
    public static function makeWhereNotRuleMap(): array
    {
        return [];
    }

    /**
     * @return array<string, string[]>
     */
    public static function makeWhereNotInRuleMap(): array
    {
        return [];
    }
}
