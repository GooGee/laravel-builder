<?php

// CreateOneItemController

declare(strict_types=1);

namespace {{ tree.getFullNameSpaceOfFile(file, entity, action) }};

use App\Base\AbstractController;
use App\Base\AbstractResponse;
use App\Models\User;
{% for dependency in dependencyzz %}
use {{ dependency }};{% endfor %}
use Illuminate\Http\JsonResponse;
use Illuminate\Support\Facades\DB;

class {{ helper.getClassName(file, entity, action) }} extends AbstractController
{
    public function __invoke({{ action + entity.name }}Request $Request): JsonResponse
    {
        /** @var User $User */
        $User = auth()->user();

        $this->acquireLock($User->Id);

        try {

            $Item = {{ action + entity.name }}::make(
                $User->Id,
    {% for column in columnzz %}
                {{ column.name }}: $Request->{{ column.alias }},{% endfor %}
            );

            DB::beginTransaction();

            {{ action + entity.name }}::run($Item, true);

            DB::commit();

            return AbstractResponse::sendModelItem($Item);

        } catch (\Throwable $Throwable) {

            DB::rollBack();

            throw $Throwable;

        } finally {
            $this->releaseLock();
        }

    }
}
